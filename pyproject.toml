[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools",
    "setuptools-scm",
]

[project]
authors = [{name = "Lena Poepping"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "ampform>=0.14.10",
    "ipympl",
    "ipywidgets",
    "matplotlib",
    "mpl-interactions",
    "orthopy",
    "pandas",
    "pyarrow",
    "qrules[viz]",
    "tensorwaves[jax,phsp]",
    "tqdm",
]
description = "Investigation of the K-matrix formalism with symbolic expressions."
dynamic = ["version"]
license = {text = "BSD 3-Clause License"}
name = "kmatrix"
requires-python = ">=3.8"

[project.optional-dependencies]
dev = [
    "kmatrix[doc]",
    "kmatrix[jupyter]",
    "kmatrix[sty]",
    "kmatrix[test]",
    "sphinx-autobuild",
    "tox",
]
doc = [
    "Sphinx",
    "myst-nb",
    "sphinx-api-relink",
    "sphinx-book-theme",
    "sphinx-codeautolink[ipython]",
    "sphinx-copybutton",
    "sphinx-design",
    "sphinx-external-toc",
    "sphinx-pybtex-etal-style",
    "sphinx-togglebutton",
    "sphinxcontrib-bibtex >=2",
]
jupyter = [
    "black",
    "isort",
    "jupyterlab",
    "jupyterlab-code-formatter",
    "jupyterlab-git",
    "jupyterlab-lsp",
    "jupyterlab-myst",
    "python-lsp-ruff",
    "python-lsp-server[rope]",
]
sty = [
    "pre-commit",
    "ruff",
]
test = [
    "nbmake",
    "pytest",
]

[project.readme]
content-type = "text/markdown"
file = "README.md"

[tool.setuptools]
include-package-data = false
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
namespaces = false
where = ["src"]

[tool.pytest.ini_options]
addopts = [
    "--color=yes",
    "--durations=0",
    "--ignore-glob=*/.ipynb_checkpoints/*",
    "--nbmake",
    "--nbmake-timeout=1200",
]
filterwarnings = ["error"]
norecursedirs = ["_build"]
testpaths = ["docs"]

[tool.ruff]
extend-exclude = ["typings"]
extend-include = ["*.ipynb"]
preview = true
show-fixes = true
src = ["src"]
target-version = "py38"

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
extend-select = [
    "A",
    "B",
    "BLE",
    "C4",
    "C90",
    "D",
    "EM",
    "ERA",
    "FA",
    "I",
    "ICN",
    "INP",
    "ISC",
    "N",
    "NPY",
    "PGH",
    "PIE",
    "PL",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "T20",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
ignore = [
    "D1",
    "D101",
    "D102",
    "D103",
    "D105",
    "D107",
    "D203",
    "D213",
    "D407",
    "D416",
    "E501",
    "ISC001",
    "N806",
    "PLW1514",
    "SIM108",
]
task-tags = ["cspell"]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = [
    "B018",
    "C408",
    "C90",
    "D",
    "E402",
    "E703",
    "E741",
    "N806",
    "N816",
    "PLR09",
    "PLR2004",
    "PLW0602",
    "PLW0603",
    "S101",
    "T20",
    "TCH00",
]
"docs/*" = [
    "E402",
    "INP001",
    "S101",
    "S113",
    "T201",
]
"docs/conf.py" = ["D100"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.tomlsort]
all = false
ignore_case = true
in_place = true
sort_first = [
    "build-system",
    "project",
    "tool.setuptools",
    "tool.setuptools_scm",
]
sort_table_keys = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true

[tool.tox]
legacy_tox_ini = """
    [tox]
    envlist =
        doc,
    skip_install = True
    skip_missing_interpreters = True
    skipsdist = True

    [testenv:doc]
    allowlist_externals =
        sphinx-build
    commands =
        sphinx-build \
            --keep-going \
            -TW \
            -b html \
            docs/ docs/_build/html
    description =
        Build documentation with Sphinx
    passenv = *
    setenv =
        FORCE_COLOR = yes

    [testenv:doclive]
    allowlist_externals =
        sphinx-autobuild
    commands =
        sphinx-autobuild \
            --open-browser \
            --re-ignore docs/api/.* \
            --re-ignore docs/_build/.* \
            --watch docs \
            docs/ docs/_build/html
    description =
        Set up a server to directly preview changes to the HTML pages
    passenv = *
    setenv =
        FORCE_COLOR = yes

    [testenv:docnb]
    allowlist_externals =
        sphinx-build
    commands =
        sphinx-build \
            --keep-going \
            -TW \
            -b html \
            docs/ docs/_build/html
    description =
        Build documentation with Sphinx
    passenv = *
    setenv =
        EXECUTE_NB = yes
        FORCE_COLOR = yes

    [testenv:docnblive]
    allowlist_externals =
        sphinx-autobuild
    commands =
        sphinx-autobuild \
            --open-browser \
            --re-ignore docs/api/.* \
            --re-ignore docs/_build/.* \
            --watch docs \
            docs/ docs/_build/html
    description =
        Set up a server to directly preview changes to the HTML pages
    passenv = *
    setenv =
        EXECUTE_NB = yes
        FORCE_COLOR = yes

    [testenv:linkcheck]
    allowlist_externals =
        sphinx-build
    commands =
        sphinx-build \
            -T \
            -b linkcheck \
            docs/ docs/_build/linkcheck
    description =
        Check external links in the documentation (requires internet connection)
    passenv = *
    setenv =
        FORCE_COLOR = yes
"""
